{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","TutorialDataService","_classCallCheck","_createClass","key","value","http","get","id","concat","data","post","put","delete","title","AddTutorial","_Component","_inherits","_super","_createSuper","props","_this","call","onChangeTitle","bind","_assertThisInitialized","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","this","setState","target","_this2","then","response","console","log","catch","React","createElement","className","onClick","htmlFor","type","required","onChange","name","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","params","prevState","_objectSpread","status","_this3","update","_this4","_this5","history","push","_this6","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","_this$state","placeholder","map","Link","to","App","apply","arguments","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9a5b9533.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL:  'https://mywebsitevm.azurewebsites.net/api',\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/tutorials\");\n  }\n\n  get(id) {\n    return http.get(`/tutorials/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/tutorials\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tutorials/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/tutorials/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/tutorials?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    TutorialDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentTutorial: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    TutorialDataService.update(\n      this.state.currentTutorial.id,\n      this.state.currentTutorial\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The tutorial was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {    \n    TutorialDataService.delete(this.state.currentTutorial.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/tutorials')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <h4>Tutorial</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveTutorials();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchTitle() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n\n    TutorialDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchTitle}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <div>\n              <h4>Tutorial</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentTutorial.title}\n              </div>\n              <div>\n                <label>\n                  <strong>Description:</strong>\n                </label>{\" \"}\n                {currentTutorial.description}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/tutorials/\" + currentTutorial.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/tutorials\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}